@mixin pseudo-overlay() {
  &:before {
    content: "";
    @include stretch;
    position: fixed;
    background: inherit;
    z-index: 999;
  }
}

@mixin scroll-after($height) {
  overflow: visible;
  &:after {
    content: "";
    position: absolute;
    top: 100%; height: $height;
    left: 0; right: 0;
    pointer-events: none;
    z-index: -1;
  }
}

iframe {
  width: 100%;
  height: 100%;

  overflow:hidden;
  border:0;
}

.panes {
  @include pie-clearfix;
  position: absolute;
  top: $header-height;
  left: 0; right: 0;
  min-height: 100%;
  padding-left: $page-padding;
  @include scroll-after($footer-height);
  @include transition(500ms);

  @media (max-height: $header-height + ($page-padding * 3) + ($min-card-height * 1.5) + $footer-height) {
    min-height: ($page-padding * 3) + ($min-card-height * 1.5);
  }

  .hide-panes & {
    @include transform(scale((1 / 3)));
    @include opacity(0);
  }
}

.pane-wrapper {
  @include box-sizing(border-box);
  position: relative;
  float: left;
  margin-bottom: $page-padding;
  padding-right: $page-padding;
  width: 50%;
  @include background-clip(content-box);
  @include transition(background 500ms);

  &.full-size {
    position: static;
    height: $min-card-height;
    background-color: transparentize(black, .75);
    @include pseudo-overlay;

    .pane {
      @include box-sizing(content-box);
      @include backface-visibility(hidden);
      position: absolute;
      left: 10%; right: 10%;
      top: $page-padding; bottom: $footer-height;
      height: auto;
      max-width: ($min-card-width * 3);
      margin: auto;
      z-index: 1000;
    }
  }

  @for $i from 3 to 6 {
    @media (min-width: ($min-card-width * $i)) {
      width: (100% / $i);
    }
  }
}

.pane {
  @include box-sizing(border-box);
  position: relative;
  overflow: hidden;

  height: $min-card-height;
  padding-bottom: $card-footer-height;

  background-color: #FFFFFF;

  &.transition-position {
    @include transition(left 500ms, right 500ms, top 500ms, bottom 500ms);
    @include transition-timing-function(ease);
  }
}

.pane-footer {
  position: absolute;
  left: 0; right: 0;
  height: $card-footer-height;
  bottom: 0;
  color: #999999;
  background: #e6e6e6;
  text-align: right;
  font-size: 1.075em;

  a {
    line-height: 35px;
    padding: 0 0.5em;
    float: right;
    color: inherit;
    text-decoration: none;
    &:hover {
      color: inherit;
      background-color: #dbdbdb;
    }
    &:active {
      color: #4d4d4d;
      background-color: #cfcfcf;
    }
  }
}

.pane-actions {
  width: $card-footer-height;
  height: $card-footer-height;
  float: right;
  background-color: #e6e6e6;
  &:hover {
    .toggle-actions {
      color: #4d4d4d;
      background-color: #cfcfcf;
    }

    .actions-list {
      display: block;
      background-color: #cfcfcf;
    }
  }

  .toggle-actions {
    display: block;
    width: 100%; height: $card-footer-height;
    margin: 0; padding: 0;
    text-align: center;
    text-decoration: none;
    span {
      font-size: 15px;
      line-height: $card-footer-height;
    }
  }

  .actions-list-wrapper {
    position: absolute;
    bottom: 100%; right: 0;
    overflow: hidden;
  }

  .actions-list {
    display: none;
    position: relative;
    background-color: #e6e6e6;
    text-align: left;
    @include animation(slideUp $fast ease-out);
    @include transition(background $fast);
    @include clearfix;
  
    li {
      display: block;
      height: 25px;
      line-height: 25px;
      font-size: 12px;
      @include clearfix;
    }

    a {
      float: none;
      display: block;
      height: 25px;
      line-height: 25px;
      padding: 0 10px;

      &:hover {
        color: inherit;
        background-color: #dbdbdb;
      }

      &:active {
        color: #4d4d4d;
        background-color: #dbdbdb;
      }

      > span {
        display: inline-block;
        font-size: 10px;
        width: 10px;
        padding-right: 10px;
      }
    }
  }
}

.hidden-pane {
  padding: 0;
  border: 0 none;
  height: 0;
  width: 0;
}

@include keyframes(slideUp) {
  0% {
    @include transform(translateY(100%));
  }
  100% {
    @include transform(translateY(0));
  }
}
